package com.example.module_7_homework.conections;

import com.example.module_7_homework.conections.Database;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;

public class DatabaseInitService {
    public static final String CREATE_TABLE_WORKER = "CREATE TABLE worker ( " +
            "ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
            "NAME VARCHAR(1000) NOT NULL CHECK (LENGTH(NAME) BETWEEN 2 AND 1000), " +
            "BIRTHDAY DATE CHECK (EXTRACT(YEAR FROM BIRTHDAY) > 1900), " +
            "LEVEL VARCHAR(100) NOT NULL, " +
            "SALARY INTEGER CHECK (SALARY >= 100 AND SALARY <= 100000) " +
            ")";

    public static final String CREATE_TABLE_CLIENT = "CREATE TABLE client ( " +
            "ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
            "NAME VARCHAR(1000) NOT NULL CHECK (LENGTH(NAME) BETWEEN 2 AND 1000) " +
            ")";

    public static final String CREATE_TABLE_PROJECT = "CREATE TABLE project ( " +
            "ID INT GENERATED BY DEFAULT AS IDENTITY, " +
            "CLIENT_ID INT, " +
            "START_DATE DATE, " +
            "FINISH_DATE DATE, " +
            "FOREIGN KEY (CLIENT_ID) REFERENCES client (ID) " +
            ")";

    public static final String CREATE_TABLE_PROJECTWORKER = "CREATE TABLE project_worker ( " +
            "PROJECT_ID INT, " +
            "WORKER_ID INT, " +
            "PRIMARY KEY (PROJECT_ID, WORKER_ID), " +
            "FOREIGN KEY (PROJECT_ID) REFERENCES project (ID), " +
            "FOREIGN KEY (WORKER_ID) REFERENCES worker (ID) " +
            ")";


    public static void createTablesMethod(String sqlQueryForCreate) {
        Connection connection;
        PreparedStatement preparedStatement;

        try {
            connection = DriverManager.getConnection(Database.getConnectionDB(), Database.getUserDB(), Database.getPasswordDB());

            preparedStatement = connection.prepareStatement(sqlQueryForCreate);
            preparedStatement.executeUpdate();

            System.out.println("Table is created successful !");

        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
    
}
